# Location of the schema file(s)
schema:
  - src/api/graphql/*.graphqls

# Location of the generated server code
exec:
  filename: src/api/graphql/gsc/gsc.go
  package: gsc

# Location of the generated GraphQL data model
model:
  filename: src/model/graphQLModel/graphQLModel.go
  package: graphQLModel

# Location and other properties of GraphQL resolver implementation file(s)
resolver:
  layout: follow-schema
  dir: src/api/graphql
  package: graphql
  filename_template: "{name}.resolvers.go"
  omit_template_comment: true

# Using []Thing instead of []*Thing
omit_slice_element_pointers: true

# Omitting Is<Name>() methods on interfaces and unions
omit_interface_checks: true

# Skipping generation of ComplexityRoot struct content and Complexity function
omit_complexity: true

# Disabling generation of file notice comments in generated code
omit_gqlgen_file_notice: true

# Not using pointers for nested structs
# e.g. type Thing struct { FieldA OtherThing } instead of type Thing struct { FieldA *OtherThing }
struct_fields_always_pointers: false

# Returning structs instead of pointers to structs from resolvers
resolvers_always_return_pointers: false

# Skipping the 'go mod tidy' command execution
skip_mod_tidy: true

# Type mapping between the GraphQL and Go type systems
# The first line in each type will be used as default for resolver arguments and modelgen, while the others will be allowed when binding to fields.
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.Uint32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
