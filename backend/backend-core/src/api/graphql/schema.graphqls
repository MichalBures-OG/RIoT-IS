# ----- SD types and instances -----

enum SDParameterType {
  STRING
  NUMBER
  BOOLEAN
}

type SDParameter {
  id: ID!
  denotation: String!
  type: SDParameterType!
}

type SDType {
  id: ID!
  denotation: String!
  parameters: [SDParameter!]!
}

input SDParameterInput {
  denotation: String!
  type: SDParameterType!
}

input SDTypeInput {
  denotation: String!
  parameters: [SDParameterInput!]!
}

type SDInstance {
  id: ID!
  uid: String!
  confirmedByUser: Boolean!
  userIdentifier: String!
  type: SDType!
}

input SDInstanceUpdateInput {
  userIdentifier: String
  confirmedByUser: Boolean
}

# ----- KPIs -----

type KPIDefinition {
  sdTypeSpecification: String!
  userIdentifier: String!
  rootNode: KPINode
}

union KPINode = StringEQKPIAtomNode | BooleanEQKPIAtomNode | NumericEQKPIAtomNode | NumericGTKPIAtomNode | NumericGEQKPIAtomNode | NumericLTKPIAtomNode | NumericLEQKPIAtomNode | LogicalOperationKPINode

type StringEQKPIAtomNode {
  sdParameterSpecification: String!
  referenceValue: String!
}

type BooleanEQKPIAtomNode {
  sdParameterSpecification: String!
  referenceValue: Boolean!
}

type NumericEQKPIAtomNode {
  sdParameterSpecification: String!
  referenceValue: Float!
}

type NumericGTKPIAtomNode {
  sdParameterSpecification: String!
  referenceValue: Float!
}

type NumericGEQKPIAtomNode {
  sdParameterSpecification: String!
  referenceValue: Float!
}

type NumericLTKPIAtomNode {
  sdParameterSpecification: String!
  referenceValue: Float!
}

type NumericLEQKPIAtomNode {
  sdParameterSpecification: String!
  referenceValue: Float!
}

enum LogicalOperationKPINodeType {
  AND
  OR
  NOR
}

type LogicalOperationKPINode {
  type: LogicalOperationKPINodeType!
  childNodes: [KPINode!]!
}

# ----- Queries and Mutations -----

type Query {
  sdType(id: ID!): SDType!
  sdTypes: [SDType!]!
  sdInstances: [SDInstance!]!
}

type Mutation {
  createSDType(input: SDTypeInput!): SDType!
  deleteSDType(id: ID!): Boolean!
  updateSDInstance(id: ID!, input: SDInstanceUpdateInput!): SDInstance!
}
