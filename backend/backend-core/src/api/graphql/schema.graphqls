enum DeviceTypeParameterType {
  STRING
  NUMBER
  BOOLEAN
}

type DeviceTypeParameter {
  id: ID!
  name: String!
  type: DeviceTypeParameterType!
}

type DeviceType {
  id: ID!
  denotation: String!
  parameters: [DeviceTypeParameter!]!
}

input DeviceTypeParameterInput {
  name: String!
  type: DeviceTypeParameterType!
}

input NewDeviceTypeInput {
  denotation: String!
  parameters: [DeviceTypeParameterInput!]!
}

type Device {
  id: ID!
  uid: String!
  name: String!
  type: DeviceType!
}

type Query {
  singleDeviceType(input: ID!): DeviceType!
  deviceTypes: [DeviceType!]!
  devices: [Device!]!
}

type Mutation {
  createNewDeviceType(input: NewDeviceTypeInput!): DeviceType!
  deleteDeviceType(input: ID!): Boolean
  updateDeviceName(id: ID!, newName: String!): Device!
}
