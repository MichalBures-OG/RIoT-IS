# ----- SD types and instances -----

enum SDParameterType {
  STRING
  NUMBER
  BOOLEAN
}

type SDParameter {
  id: ID!
  denotation: String!
  type: SDParameterType!
}

type SDType {
  id: ID!
  denotation: String!
  parameters: [SDParameter!]!
}

input SDParameterInput {
  denotation: String!
  type: SDParameterType!
}

input SDTypeInput {
  denotation: String!
  parameters: [SDParameterInput!]!
}

type SDInstance {
  id: ID!
  uid: String!
  confirmedByUser: Boolean!
  userIdentifier: String!
  type: SDType!
}

input SDInstanceUpdateInput {
  userIdentifier: String
  confirmedByUser: Boolean
}

# ----- KPIs -----

type KPIDefinition {
  id: ID!
  sdTypeSpecification: String!
  userIdentifier: String!
  nodes: [KPINode!]!
}

interface KPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
}

enum LogicalOperationType {
  AND
  OR
  NOR
}

type LogicalOperationKPINode implements KPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  type: LogicalOperationType!
}

interface AtomKPINode implements KPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  sdParameterSpecification: String!
}

type StringEQAtomKPINode implements KPINode & AtomKPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  sdParameterSpecification: String!
  stringReferenceValue: String!
}

type BooleanEQAtomKPINode implements KPINode & AtomKPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  sdParameterSpecification: String!
  booleanReferenceValue: Boolean!
}

type NumericEQAtomKPINode implements KPINode & AtomKPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  sdParameterSpecification: String!
  numericReferenceValue: Float!
}

type NumericGTAtomKPINode implements KPINode & AtomKPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  sdParameterSpecification: String!
  numericReferenceValue: Float!
}

type NumericGEQAtomKPINode implements KPINode & AtomKPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  sdParameterSpecification: String!
  numericReferenceValue: Float!
}

type NumericLTAtomKPINode implements KPINode & AtomKPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  sdParameterSpecification: String!
  numericReferenceValue: Float!
}

type NumericLEQAtomKPINode implements KPINode & AtomKPINode {
  id: ID!
  parentNodeID: ID
  nodeType: KPINodeType!
  sdParameterSpecification: String!
  numericReferenceValue: Float!
}

input KPIDefinitionInput {
  sdTypeSpecification: String!
  userIdentifier: String!
  nodes: [KPINodeInput!]!
}

enum KPINodeType {
  StringEQAtom,
  BooleanEQAtom,
  NumericEQAtom,
  NumericGTAtom,
  NumericGEQAtom,
  NumericLTAtom,
  NumericLEQAtom,
  LogicalOperation
}

input KPINodeInput {
  type: KPINodeType!
  id: ID!
  parentNodeID: ID
  sdParameterSpecification: String
  stringReferenceValue: String
  booleanReferenceValue: Boolean
  numericReferenceValue: Float
  logicalOperationType: LogicalOperationType
}

# ----- Queries and Mutations -----

type Query {
  sdType(id: ID!): SDType!
  sdTypes: [SDType!]!
  sdInstances: [SDInstance!]!
  kpiDefinition(id: ID!): KPIDefinition!
  kpiDefinitions: [KPIDefinition!]!
}

type Mutation {
  createSDType(input: SDTypeInput!): SDType!
  deleteSDType(id: ID!): Boolean!
  updateSDInstance(id: ID!, input: SDInstanceUpdateInput!): SDInstance!
  createKPIDefinition(input: KPIDefinitionInput!): KPIDefinition!
}
