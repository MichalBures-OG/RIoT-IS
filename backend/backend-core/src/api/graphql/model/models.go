// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type AtomKPINode interface {
	IsKPINode()
	IsAtomKPINode()
	GetID() string
	GetParentNodeID() *string
	GetNodeType() KPINodeType
	GetSdParameterID() string
	GetSdParameterSpecification() string
}

type KPINode interface {
	IsKPINode()
	GetID() string
	GetParentNodeID() *string
	GetNodeType() KPINodeType
}

type BooleanEQAtomKPINode struct {
	ID                       string      `json:"id"`
	ParentNodeID             *string     `json:"parentNodeID,omitempty"`
	NodeType                 KPINodeType `json:"nodeType"`
	SdParameterID            string      `json:"sdParameterID"`
	SdParameterSpecification string      `json:"sdParameterSpecification"`
	BooleanReferenceValue    bool        `json:"booleanReferenceValue"`
}

func (BooleanEQAtomKPINode) IsKPINode()                    {}
func (this BooleanEQAtomKPINode) GetID() string            { return this.ID }
func (this BooleanEQAtomKPINode) GetParentNodeID() *string { return this.ParentNodeID }
func (this BooleanEQAtomKPINode) GetNodeType() KPINodeType { return this.NodeType }

func (BooleanEQAtomKPINode) IsAtomKPINode() {}

func (this BooleanEQAtomKPINode) GetSdParameterID() string { return this.SdParameterID }
func (this BooleanEQAtomKPINode) GetSdParameterSpecification() string {
	return this.SdParameterSpecification
}

type KPIDefinition struct {
	ID                  string    `json:"id"`
	SdTypeID            string    `json:"sdTypeID"`
	SdTypeSpecification string    `json:"sdTypeSpecification"`
	UserIdentifier      string    `json:"userIdentifier"`
	Nodes               []KPINode `json:"nodes"`
}

type KPIDefinitionInput struct {
	SdTypeID            string          `json:"sdTypeID"`
	SdTypeSpecification string          `json:"sdTypeSpecification"`
	UserIdentifier      string          `json:"userIdentifier"`
	Nodes               []*KPINodeInput `json:"nodes"`
}

type KPIFulfillmentCheckResult struct {
	KpiDefinitionID string `json:"kpiDefinitionID"`
	SdInstanceID    string `json:"sdInstanceID"`
	Fulfilled       bool   `json:"fulfilled"`
}

type KPINodeInput struct {
	Type                     KPINodeType           `json:"type"`
	ID                       string                `json:"id"`
	ParentNodeID             *string               `json:"parentNodeID,omitempty"`
	SdParameterID            *string               `json:"sdParameterID,omitempty"`
	SdParameterSpecification *string               `json:"sdParameterSpecification,omitempty"`
	StringReferenceValue     *string               `json:"stringReferenceValue,omitempty"`
	BooleanReferenceValue    *bool                 `json:"booleanReferenceValue,omitempty"`
	NumericReferenceValue    *float64              `json:"numericReferenceValue,omitempty"`
	LogicalOperationType     *LogicalOperationType `json:"logicalOperationType,omitempty"`
}

type LogicalOperationKPINode struct {
	ID           string               `json:"id"`
	ParentNodeID *string              `json:"parentNodeID,omitempty"`
	NodeType     KPINodeType          `json:"nodeType"`
	Type         LogicalOperationType `json:"type"`
}

func (LogicalOperationKPINode) IsKPINode()                    {}
func (this LogicalOperationKPINode) GetID() string            { return this.ID }
func (this LogicalOperationKPINode) GetParentNodeID() *string { return this.ParentNodeID }
func (this LogicalOperationKPINode) GetNodeType() KPINodeType { return this.NodeType }

type Mutation struct {
}

type NumericEQAtomKPINode struct {
	ID                       string      `json:"id"`
	ParentNodeID             *string     `json:"parentNodeID,omitempty"`
	NodeType                 KPINodeType `json:"nodeType"`
	SdParameterID            string      `json:"sdParameterID"`
	SdParameterSpecification string      `json:"sdParameterSpecification"`
	NumericReferenceValue    float64     `json:"numericReferenceValue"`
}

func (NumericEQAtomKPINode) IsKPINode()                    {}
func (this NumericEQAtomKPINode) GetID() string            { return this.ID }
func (this NumericEQAtomKPINode) GetParentNodeID() *string { return this.ParentNodeID }
func (this NumericEQAtomKPINode) GetNodeType() KPINodeType { return this.NodeType }

func (NumericEQAtomKPINode) IsAtomKPINode() {}

func (this NumericEQAtomKPINode) GetSdParameterID() string { return this.SdParameterID }
func (this NumericEQAtomKPINode) GetSdParameterSpecification() string {
	return this.SdParameterSpecification
}

type NumericGEQAtomKPINode struct {
	ID                       string      `json:"id"`
	ParentNodeID             *string     `json:"parentNodeID,omitempty"`
	NodeType                 KPINodeType `json:"nodeType"`
	SdParameterID            string      `json:"sdParameterID"`
	SdParameterSpecification string      `json:"sdParameterSpecification"`
	NumericReferenceValue    float64     `json:"numericReferenceValue"`
}

func (NumericGEQAtomKPINode) IsKPINode()                    {}
func (this NumericGEQAtomKPINode) GetID() string            { return this.ID }
func (this NumericGEQAtomKPINode) GetParentNodeID() *string { return this.ParentNodeID }
func (this NumericGEQAtomKPINode) GetNodeType() KPINodeType { return this.NodeType }

func (NumericGEQAtomKPINode) IsAtomKPINode() {}

func (this NumericGEQAtomKPINode) GetSdParameterID() string { return this.SdParameterID }
func (this NumericGEQAtomKPINode) GetSdParameterSpecification() string {
	return this.SdParameterSpecification
}

type NumericGTAtomKPINode struct {
	ID                       string      `json:"id"`
	ParentNodeID             *string     `json:"parentNodeID,omitempty"`
	NodeType                 KPINodeType `json:"nodeType"`
	SdParameterID            string      `json:"sdParameterID"`
	SdParameterSpecification string      `json:"sdParameterSpecification"`
	NumericReferenceValue    float64     `json:"numericReferenceValue"`
}

func (NumericGTAtomKPINode) IsKPINode()                    {}
func (this NumericGTAtomKPINode) GetID() string            { return this.ID }
func (this NumericGTAtomKPINode) GetParentNodeID() *string { return this.ParentNodeID }
func (this NumericGTAtomKPINode) GetNodeType() KPINodeType { return this.NodeType }

func (NumericGTAtomKPINode) IsAtomKPINode() {}

func (this NumericGTAtomKPINode) GetSdParameterID() string { return this.SdParameterID }
func (this NumericGTAtomKPINode) GetSdParameterSpecification() string {
	return this.SdParameterSpecification
}

type NumericLEQAtomKPINode struct {
	ID                       string      `json:"id"`
	ParentNodeID             *string     `json:"parentNodeID,omitempty"`
	NodeType                 KPINodeType `json:"nodeType"`
	SdParameterID            string      `json:"sdParameterID"`
	SdParameterSpecification string      `json:"sdParameterSpecification"`
	NumericReferenceValue    float64     `json:"numericReferenceValue"`
}

func (NumericLEQAtomKPINode) IsKPINode()                    {}
func (this NumericLEQAtomKPINode) GetID() string            { return this.ID }
func (this NumericLEQAtomKPINode) GetParentNodeID() *string { return this.ParentNodeID }
func (this NumericLEQAtomKPINode) GetNodeType() KPINodeType { return this.NodeType }

func (NumericLEQAtomKPINode) IsAtomKPINode() {}

func (this NumericLEQAtomKPINode) GetSdParameterID() string { return this.SdParameterID }
func (this NumericLEQAtomKPINode) GetSdParameterSpecification() string {
	return this.SdParameterSpecification
}

type NumericLTAtomKPINode struct {
	ID                       string      `json:"id"`
	ParentNodeID             *string     `json:"parentNodeID,omitempty"`
	NodeType                 KPINodeType `json:"nodeType"`
	SdParameterID            string      `json:"sdParameterID"`
	SdParameterSpecification string      `json:"sdParameterSpecification"`
	NumericReferenceValue    float64     `json:"numericReferenceValue"`
}

func (NumericLTAtomKPINode) IsKPINode()                    {}
func (this NumericLTAtomKPINode) GetID() string            { return this.ID }
func (this NumericLTAtomKPINode) GetParentNodeID() *string { return this.ParentNodeID }
func (this NumericLTAtomKPINode) GetNodeType() KPINodeType { return this.NodeType }

func (NumericLTAtomKPINode) IsAtomKPINode() {}

func (this NumericLTAtomKPINode) GetSdParameterID() string { return this.SdParameterID }
func (this NumericLTAtomKPINode) GetSdParameterSpecification() string {
	return this.SdParameterSpecification
}

type Query struct {
}

type SDInstance struct {
	ID              string  `json:"id"`
	UID             string  `json:"uid"`
	ConfirmedByUser bool    `json:"confirmedByUser"`
	UserIdentifier  string  `json:"userIdentifier"`
	Type            *SDType `json:"type"`
}

type SDInstanceGroup struct {
	ID             string   `json:"id"`
	UserIdentifier string   `json:"userIdentifier"`
	SdInstanceIDs  []string `json:"sdInstanceIDs"`
}

type SDInstanceGroupInput struct {
	UserIdentifier string   `json:"userIdentifier"`
	SdInstanceIDs  []string `json:"sdInstanceIDs"`
}

type SDInstanceGroupUpdateInput struct {
	NewUserIdentifier     *string  `json:"newUserIdentifier,omitempty"`
	SdInstanceIDsToAdd    []string `json:"sdInstanceIDsToAdd,omitempty"`
	SdInstanceIDsToRemove []string `json:"sdInstanceIDsToRemove,omitempty"`
}

type SDInstanceUpdateInput struct {
	UserIdentifier  *string `json:"userIdentifier,omitempty"`
	ConfirmedByUser *bool   `json:"confirmedByUser,omitempty"`
}

type SDParameter struct {
	ID         string          `json:"id"`
	Denotation string          `json:"denotation"`
	Type       SDParameterType `json:"type"`
}

type SDParameterInput struct {
	Denotation string          `json:"denotation"`
	Type       SDParameterType `json:"type"`
}

type SDType struct {
	ID         string         `json:"id"`
	Denotation string         `json:"denotation"`
	Parameters []*SDParameter `json:"parameters"`
}

type SDTypeInput struct {
	Denotation string              `json:"denotation"`
	Parameters []*SDParameterInput `json:"parameters"`
}

type StringEQAtomKPINode struct {
	ID                       string      `json:"id"`
	ParentNodeID             *string     `json:"parentNodeID,omitempty"`
	NodeType                 KPINodeType `json:"nodeType"`
	SdParameterID            string      `json:"sdParameterID"`
	SdParameterSpecification string      `json:"sdParameterSpecification"`
	StringReferenceValue     string      `json:"stringReferenceValue"`
}

func (StringEQAtomKPINode) IsKPINode()                    {}
func (this StringEQAtomKPINode) GetID() string            { return this.ID }
func (this StringEQAtomKPINode) GetParentNodeID() *string { return this.ParentNodeID }
func (this StringEQAtomKPINode) GetNodeType() KPINodeType { return this.NodeType }

func (StringEQAtomKPINode) IsAtomKPINode() {}

func (this StringEQAtomKPINode) GetSdParameterID() string { return this.SdParameterID }
func (this StringEQAtomKPINode) GetSdParameterSpecification() string {
	return this.SdParameterSpecification
}

type Subscription struct {
}

type KPINodeType string

const (
	KPINodeTypeStringEQAtom     KPINodeType = "StringEQAtom"
	KPINodeTypeBooleanEQAtom    KPINodeType = "BooleanEQAtom"
	KPINodeTypeNumericEQAtom    KPINodeType = "NumericEQAtom"
	KPINodeTypeNumericGTAtom    KPINodeType = "NumericGTAtom"
	KPINodeTypeNumericGEQAtom   KPINodeType = "NumericGEQAtom"
	KPINodeTypeNumericLTAtom    KPINodeType = "NumericLTAtom"
	KPINodeTypeNumericLEQAtom   KPINodeType = "NumericLEQAtom"
	KPINodeTypeLogicalOperation KPINodeType = "LogicalOperation"
)

var AllKPINodeType = []KPINodeType{
	KPINodeTypeStringEQAtom,
	KPINodeTypeBooleanEQAtom,
	KPINodeTypeNumericEQAtom,
	KPINodeTypeNumericGTAtom,
	KPINodeTypeNumericGEQAtom,
	KPINodeTypeNumericLTAtom,
	KPINodeTypeNumericLEQAtom,
	KPINodeTypeLogicalOperation,
}

func (e KPINodeType) IsValid() bool {
	switch e {
	case KPINodeTypeStringEQAtom, KPINodeTypeBooleanEQAtom, KPINodeTypeNumericEQAtom, KPINodeTypeNumericGTAtom, KPINodeTypeNumericGEQAtom, KPINodeTypeNumericLTAtom, KPINodeTypeNumericLEQAtom, KPINodeTypeLogicalOperation:
		return true
	}
	return false
}

func (e KPINodeType) String() string {
	return string(e)
}

func (e *KPINodeType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = KPINodeType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid KPINodeType", str)
	}
	return nil
}

func (e KPINodeType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type LogicalOperationType string

const (
	LogicalOperationTypeAnd LogicalOperationType = "AND"
	LogicalOperationTypeOr  LogicalOperationType = "OR"
	LogicalOperationTypeNor LogicalOperationType = "NOR"
)

var AllLogicalOperationType = []LogicalOperationType{
	LogicalOperationTypeAnd,
	LogicalOperationTypeOr,
	LogicalOperationTypeNor,
}

func (e LogicalOperationType) IsValid() bool {
	switch e {
	case LogicalOperationTypeAnd, LogicalOperationTypeOr, LogicalOperationTypeNor:
		return true
	}
	return false
}

func (e LogicalOperationType) String() string {
	return string(e)
}

func (e *LogicalOperationType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = LogicalOperationType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid LogicalOperationType", str)
	}
	return nil
}

func (e LogicalOperationType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type SDParameterType string

const (
	SDParameterTypeString  SDParameterType = "STRING"
	SDParameterTypeNumber  SDParameterType = "NUMBER"
	SDParameterTypeBoolean SDParameterType = "BOOLEAN"
)

var AllSDParameterType = []SDParameterType{
	SDParameterTypeString,
	SDParameterTypeNumber,
	SDParameterTypeBoolean,
}

func (e SDParameterType) IsValid() bool {
	switch e {
	case SDParameterTypeString, SDParameterTypeNumber, SDParameterTypeBoolean:
		return true
	}
	return false
}

func (e SDParameterType) String() string {
	return string(e)
}

func (e *SDParameterType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = SDParameterType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid SDParameterType", str)
	}
	return nil
}

func (e SDParameterType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
